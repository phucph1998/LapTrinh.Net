#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace SpaClassLibrary
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="DB_SPA")]
	public partial class DC_CustomerDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertPROFILE(PROFILE instance);
    partial void UpdatePROFILE(PROFILE instance);
    partial void DeletePROFILE(PROFILE instance);
    partial void InsertPROFILE_CUSTOMER(PROFILE_CUSTOMER instance);
    partial void UpdatePROFILE_CUSTOMER(PROFILE_CUSTOMER instance);
    partial void DeletePROFILE_CUSTOMER(PROFILE_CUSTOMER instance);
    partial void InsertACCOUNT(ACCOUNT instance);
    partial void UpdateACCOUNT(ACCOUNT instance);
    partial void DeleteACCOUNT(ACCOUNT instance);
    #endregion
		
		public DC_CustomerDataContext() : 
				base(global::SpaClassLibrary.Properties.Settings.Default.DB_SPAConnect, mappingSource)
		{
			OnCreated();
		}
		
		public DC_CustomerDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DC_CustomerDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DC_CustomerDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DC_CustomerDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<PROFILE> PROFILEs
		{
			get
			{
				return this.GetTable<PROFILE>();
			}
		}
		
		public System.Data.Linq.Table<PROFILE_CUSTOMER> PROFILE_CUSTOMERs
		{
			get
			{
				return this.GetTable<PROFILE_CUSTOMER>();
			}
		}
		
		public System.Data.Linq.Table<ACCOUNT> ACCOUNTs
		{
			get
			{
				return this.GetTable<ACCOUNT>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.PROFILE")]
	public partial class PROFILE : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID_PROFILE;
		
		private System.Nullable<int> _ID_USER;
		
		private string _IDENFITICATION;
		
		private string _LAST_NAME;
		
		private string _FIRST_NAME;
		
		private string _SEX;
		
		private string _PHONE;
		
		private string _ADDRESS;
		
		private System.Nullable<int> _STATUS;
		
		private EntitySet<PROFILE_CUSTOMER> _PROFILE_CUSTOMERs;
		
		private EntityRef<ACCOUNT> _ACCOUNT;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnID_PROFILEChanging(int value);
    partial void OnID_PROFILEChanged();
    partial void OnID_USERChanging(System.Nullable<int> value);
    partial void OnID_USERChanged();
    partial void OnIDENFITICATIONChanging(string value);
    partial void OnIDENFITICATIONChanged();
    partial void OnLAST_NAMEChanging(string value);
    partial void OnLAST_NAMEChanged();
    partial void OnFIRST_NAMEChanging(string value);
    partial void OnFIRST_NAMEChanged();
    partial void OnSEXChanging(string value);
    partial void OnSEXChanged();
    partial void OnPHONEChanging(string value);
    partial void OnPHONEChanged();
    partial void OnADDRESSChanging(string value);
    partial void OnADDRESSChanged();
    partial void OnSTATUSChanging(System.Nullable<int> value);
    partial void OnSTATUSChanged();
    #endregion
		
		public PROFILE()
		{
			this._PROFILE_CUSTOMERs = new EntitySet<PROFILE_CUSTOMER>(new Action<PROFILE_CUSTOMER>(this.attach_PROFILE_CUSTOMERs), new Action<PROFILE_CUSTOMER>(this.detach_PROFILE_CUSTOMERs));
			this._ACCOUNT = default(EntityRef<ACCOUNT>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_PROFILE", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int ID_PROFILE
		{
			get
			{
				return this._ID_PROFILE;
			}
			set
			{
				if ((this._ID_PROFILE != value))
				{
					this.OnID_PROFILEChanging(value);
					this.SendPropertyChanging();
					this._ID_PROFILE = value;
					this.SendPropertyChanged("ID_PROFILE");
					this.OnID_PROFILEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_USER", DbType="Int")]
		public System.Nullable<int> ID_USER
		{
			get
			{
				return this._ID_USER;
			}
			set
			{
				if ((this._ID_USER != value))
				{
					if (this._ACCOUNT.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnID_USERChanging(value);
					this.SendPropertyChanging();
					this._ID_USER = value;
					this.SendPropertyChanged("ID_USER");
					this.OnID_USERChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDENFITICATION", DbType="VarChar(12)")]
		public string IDENFITICATION
		{
			get
			{
				return this._IDENFITICATION;
			}
			set
			{
				if ((this._IDENFITICATION != value))
				{
					this.OnIDENFITICATIONChanging(value);
					this.SendPropertyChanging();
					this._IDENFITICATION = value;
					this.SendPropertyChanged("IDENFITICATION");
					this.OnIDENFITICATIONChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LAST_NAME", DbType="NVarChar(50)")]
		public string LAST_NAME
		{
			get
			{
				return this._LAST_NAME;
			}
			set
			{
				if ((this._LAST_NAME != value))
				{
					this.OnLAST_NAMEChanging(value);
					this.SendPropertyChanging();
					this._LAST_NAME = value;
					this.SendPropertyChanged("LAST_NAME");
					this.OnLAST_NAMEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FIRST_NAME", DbType="NVarChar(50)")]
		public string FIRST_NAME
		{
			get
			{
				return this._FIRST_NAME;
			}
			set
			{
				if ((this._FIRST_NAME != value))
				{
					this.OnFIRST_NAMEChanging(value);
					this.SendPropertyChanging();
					this._FIRST_NAME = value;
					this.SendPropertyChanged("FIRST_NAME");
					this.OnFIRST_NAMEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SEX", DbType="NVarChar(5)")]
		public string SEX
		{
			get
			{
				return this._SEX;
			}
			set
			{
				if ((this._SEX != value))
				{
					this.OnSEXChanging(value);
					this.SendPropertyChanging();
					this._SEX = value;
					this.SendPropertyChanged("SEX");
					this.OnSEXChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PHONE", DbType="Char(10)")]
		public string PHONE
		{
			get
			{
				return this._PHONE;
			}
			set
			{
				if ((this._PHONE != value))
				{
					this.OnPHONEChanging(value);
					this.SendPropertyChanging();
					this._PHONE = value;
					this.SendPropertyChanged("PHONE");
					this.OnPHONEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ADDRESS", DbType="NVarChar(250)")]
		public string ADDRESS
		{
			get
			{
				return this._ADDRESS;
			}
			set
			{
				if ((this._ADDRESS != value))
				{
					this.OnADDRESSChanging(value);
					this.SendPropertyChanging();
					this._ADDRESS = value;
					this.SendPropertyChanged("ADDRESS");
					this.OnADDRESSChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_STATUS", DbType="Int")]
		public System.Nullable<int> STATUS
		{
			get
			{
				return this._STATUS;
			}
			set
			{
				if ((this._STATUS != value))
				{
					this.OnSTATUSChanging(value);
					this.SendPropertyChanging();
					this._STATUS = value;
					this.SendPropertyChanged("STATUS");
					this.OnSTATUSChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PROFILE_PROFILE_CUSTOMER", Storage="_PROFILE_CUSTOMERs", ThisKey="ID_PROFILE", OtherKey="ID_PROFILE")]
		public EntitySet<PROFILE_CUSTOMER> PROFILE_CUSTOMERs
		{
			get
			{
				return this._PROFILE_CUSTOMERs;
			}
			set
			{
				this._PROFILE_CUSTOMERs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ACCOUNT_PROFILE", Storage="_ACCOUNT", ThisKey="ID_USER", OtherKey="ID_USER", IsForeignKey=true)]
		public ACCOUNT ACCOUNT
		{
			get
			{
				return this._ACCOUNT.Entity;
			}
			set
			{
				ACCOUNT previousValue = this._ACCOUNT.Entity;
				if (((previousValue != value) 
							|| (this._ACCOUNT.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ACCOUNT.Entity = null;
						previousValue.PROFILEs.Remove(this);
					}
					this._ACCOUNT.Entity = value;
					if ((value != null))
					{
						value.PROFILEs.Add(this);
						this._ID_USER = value.ID_USER;
					}
					else
					{
						this._ID_USER = default(Nullable<int>);
					}
					this.SendPropertyChanged("ACCOUNT");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_PROFILE_CUSTOMERs(PROFILE_CUSTOMER entity)
		{
			this.SendPropertyChanging();
			entity.PROFILE = this;
		}
		
		private void detach_PROFILE_CUSTOMERs(PROFILE_CUSTOMER entity)
		{
			this.SendPropertyChanging();
			entity.PROFILE = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.PROFILE_CUSTOMER")]
	public partial class PROFILE_CUSTOMER : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID_PROFILE_CUSTOMER;
		
		private System.Nullable<int> _ID_TYPE_CUS;
		
		private System.Nullable<int> _ID_PROFILE;
		
		private System.Nullable<int> _SCORE;
		
		private EntityRef<PROFILE> _PROFILE;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnID_PROFILE_CUSTOMERChanging(int value);
    partial void OnID_PROFILE_CUSTOMERChanged();
    partial void OnID_TYPE_CUSChanging(System.Nullable<int> value);
    partial void OnID_TYPE_CUSChanged();
    partial void OnID_PROFILEChanging(System.Nullable<int> value);
    partial void OnID_PROFILEChanged();
    partial void OnSCOREChanging(System.Nullable<int> value);
    partial void OnSCOREChanged();
    #endregion
		
		public PROFILE_CUSTOMER()
		{
			this._PROFILE = default(EntityRef<PROFILE>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_PROFILE_CUSTOMER", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int ID_PROFILE_CUSTOMER
		{
			get
			{
				return this._ID_PROFILE_CUSTOMER;
			}
			set
			{
				if ((this._ID_PROFILE_CUSTOMER != value))
				{
					this.OnID_PROFILE_CUSTOMERChanging(value);
					this.SendPropertyChanging();
					this._ID_PROFILE_CUSTOMER = value;
					this.SendPropertyChanged("ID_PROFILE_CUSTOMER");
					this.OnID_PROFILE_CUSTOMERChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_TYPE_CUS", DbType="Int")]
		public System.Nullable<int> ID_TYPE_CUS
		{
			get
			{
				return this._ID_TYPE_CUS;
			}
			set
			{
				if ((this._ID_TYPE_CUS != value))
				{
					this.OnID_TYPE_CUSChanging(value);
					this.SendPropertyChanging();
					this._ID_TYPE_CUS = value;
					this.SendPropertyChanged("ID_TYPE_CUS");
					this.OnID_TYPE_CUSChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_PROFILE", DbType="Int")]
		public System.Nullable<int> ID_PROFILE
		{
			get
			{
				return this._ID_PROFILE;
			}
			set
			{
				if ((this._ID_PROFILE != value))
				{
					if (this._PROFILE.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnID_PROFILEChanging(value);
					this.SendPropertyChanging();
					this._ID_PROFILE = value;
					this.SendPropertyChanged("ID_PROFILE");
					this.OnID_PROFILEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SCORE", DbType="Int")]
		public System.Nullable<int> SCORE
		{
			get
			{
				return this._SCORE;
			}
			set
			{
				if ((this._SCORE != value))
				{
					this.OnSCOREChanging(value);
					this.SendPropertyChanging();
					this._SCORE = value;
					this.SendPropertyChanged("SCORE");
					this.OnSCOREChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PROFILE_PROFILE_CUSTOMER", Storage="_PROFILE", ThisKey="ID_PROFILE", OtherKey="ID_PROFILE", IsForeignKey=true)]
		public PROFILE PROFILE
		{
			get
			{
				return this._PROFILE.Entity;
			}
			set
			{
				PROFILE previousValue = this._PROFILE.Entity;
				if (((previousValue != value) 
							|| (this._PROFILE.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._PROFILE.Entity = null;
						previousValue.PROFILE_CUSTOMERs.Remove(this);
					}
					this._PROFILE.Entity = value;
					if ((value != null))
					{
						value.PROFILE_CUSTOMERs.Add(this);
						this._ID_PROFILE = value.ID_PROFILE;
					}
					else
					{
						this._ID_PROFILE = default(Nullable<int>);
					}
					this.SendPropertyChanged("PROFILE");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ACCOUNT")]
	public partial class ACCOUNT : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID_USER;
		
		private System.Nullable<int> _ID_ROLE;
		
		private string _USERNAME;
		
		private string _PASSWORD;
		
		private System.Nullable<int> _STATUS;
		
		private EntitySet<PROFILE> _PROFILEs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnID_USERChanging(int value);
    partial void OnID_USERChanged();
    partial void OnID_ROLEChanging(System.Nullable<int> value);
    partial void OnID_ROLEChanged();
    partial void OnUSERNAMEChanging(string value);
    partial void OnUSERNAMEChanged();
    partial void OnPASSWORDChanging(string value);
    partial void OnPASSWORDChanged();
    partial void OnSTATUSChanging(System.Nullable<int> value);
    partial void OnSTATUSChanged();
    #endregion
		
		public ACCOUNT()
		{
			this._PROFILEs = new EntitySet<PROFILE>(new Action<PROFILE>(this.attach_PROFILEs), new Action<PROFILE>(this.detach_PROFILEs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_USER", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int ID_USER
		{
			get
			{
				return this._ID_USER;
			}
			set
			{
				if ((this._ID_USER != value))
				{
					this.OnID_USERChanging(value);
					this.SendPropertyChanging();
					this._ID_USER = value;
					this.SendPropertyChanged("ID_USER");
					this.OnID_USERChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_ROLE", DbType="Int")]
		public System.Nullable<int> ID_ROLE
		{
			get
			{
				return this._ID_ROLE;
			}
			set
			{
				if ((this._ID_ROLE != value))
				{
					this.OnID_ROLEChanging(value);
					this.SendPropertyChanging();
					this._ID_ROLE = value;
					this.SendPropertyChanged("ID_ROLE");
					this.OnID_ROLEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_USERNAME", DbType="VarChar(50)")]
		public string USERNAME
		{
			get
			{
				return this._USERNAME;
			}
			set
			{
				if ((this._USERNAME != value))
				{
					this.OnUSERNAMEChanging(value);
					this.SendPropertyChanging();
					this._USERNAME = value;
					this.SendPropertyChanged("USERNAME");
					this.OnUSERNAMEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PASSWORD", DbType="VarChar(50)")]
		public string PASSWORD
		{
			get
			{
				return this._PASSWORD;
			}
			set
			{
				if ((this._PASSWORD != value))
				{
					this.OnPASSWORDChanging(value);
					this.SendPropertyChanging();
					this._PASSWORD = value;
					this.SendPropertyChanged("PASSWORD");
					this.OnPASSWORDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_STATUS", DbType="Int")]
		public System.Nullable<int> STATUS
		{
			get
			{
				return this._STATUS;
			}
			set
			{
				if ((this._STATUS != value))
				{
					this.OnSTATUSChanging(value);
					this.SendPropertyChanging();
					this._STATUS = value;
					this.SendPropertyChanged("STATUS");
					this.OnSTATUSChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ACCOUNT_PROFILE", Storage="_PROFILEs", ThisKey="ID_USER", OtherKey="ID_USER")]
		public EntitySet<PROFILE> PROFILEs
		{
			get
			{
				return this._PROFILEs;
			}
			set
			{
				this._PROFILEs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_PROFILEs(PROFILE entity)
		{
			this.SendPropertyChanging();
			entity.ACCOUNT = this;
		}
		
		private void detach_PROFILEs(PROFILE entity)
		{
			this.SendPropertyChanging();
			entity.ACCOUNT = null;
		}
	}
}
#pragma warning restore 1591
