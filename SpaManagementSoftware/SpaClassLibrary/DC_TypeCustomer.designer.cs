#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace SpaClassLibrary
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="DB_SPA")]
	public partial class DC_TypeCustomerDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertTYPE_CUSTOMER(TYPE_CUSTOMER instance);
    partial void UpdateTYPE_CUSTOMER(TYPE_CUSTOMER instance);
    partial void DeleteTYPE_CUSTOMER(TYPE_CUSTOMER instance);
    #endregion
		
		public DC_TypeCustomerDataContext() : 
				base(global::SpaClassLibrary.Properties.Settings.Default.DB_SPAConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public DC_TypeCustomerDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DC_TypeCustomerDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DC_TypeCustomerDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DC_TypeCustomerDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<TYPE_CUSTOMER> TYPE_CUSTOMERs
		{
			get
			{
				return this.GetTable<TYPE_CUSTOMER>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TYPE_CUSTOMER")]
	public partial class TYPE_CUSTOMER : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID_TYPE_CUS;
		
		private string _NAME_TYPE;
		
		private System.Nullable<int> _STATUS;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnID_TYPE_CUSChanging(int value);
    partial void OnID_TYPE_CUSChanged();
    partial void OnNAME_TYPEChanging(string value);
    partial void OnNAME_TYPEChanged();
    partial void OnSTATUSChanging(System.Nullable<int> value);
    partial void OnSTATUSChanged();
    #endregion
		
		public TYPE_CUSTOMER()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_TYPE_CUS", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int ID_TYPE_CUS
		{
			get
			{
				return this._ID_TYPE_CUS;
			}
			set
			{
				if ((this._ID_TYPE_CUS != value))
				{
					this.OnID_TYPE_CUSChanging(value);
					this.SendPropertyChanging();
					this._ID_TYPE_CUS = value;
					this.SendPropertyChanged("ID_TYPE_CUS");
					this.OnID_TYPE_CUSChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NAME_TYPE", DbType="NVarChar(50)")]
		public string NAME_TYPE
		{
			get
			{
				return this._NAME_TYPE;
			}
			set
			{
				if ((this._NAME_TYPE != value))
				{
					this.OnNAME_TYPEChanging(value);
					this.SendPropertyChanging();
					this._NAME_TYPE = value;
					this.SendPropertyChanged("NAME_TYPE");
					this.OnNAME_TYPEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_STATUS", DbType="Int")]
		public System.Nullable<int> STATUS
		{
			get
			{
				return this._STATUS;
			}
			set
			{
				if ((this._STATUS != value))
				{
					this.OnSTATUSChanging(value);
					this.SendPropertyChanging();
					this._STATUS = value;
					this.SendPropertyChanged("STATUS");
					this.OnSTATUSChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
